import 'dart:io';

class AppConstants {
  // API Configuration
  static String get baseUrl =>
      Platform.isAndroid ? 'http://10.0.2.2:3000' : 'http://localhost:3000';
  static const String apiAuthPath = '/api/auth';
  static const Duration requestTimeout = Duration(seconds: 10);

  // SharedPreferences Keys
  static const String authTokenKey = 'auth_token';

  // UI Constants
  static const double borderRadius = 8.0;
  static const double appBarBorderRadius = 25.0;
  static const double avatarSize = 80.0;
  static const double buttonHeight = 48.0;

  // Animation Durations
  static const Duration animationDuration = Duration(milliseconds: 300);
  static const Duration searchAnimationDuration = Duration(milliseconds: 300);

  // File Upload
  static const int maxFileSize = 5 * 1024 * 1024; // 5MB
  static const List<String> allowedImageTypes = [
    'image/jpeg',
    'image/jpg',
    'image/png',
    'image/gif',
    'image/webp',
    'image/bmp',
  ];

  // Sample Data - can be moved to separate file later
  static const List<Map<String, dynamic>> samplePosts = [
    {
      'author': 'Nguyen Van A',
      'content': 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi ·ª©ng d·ª•ng chat 888! üéâ',
      'time': '2 gi·ªù tr∆∞·ªõc',
      'likes': 5,
      'comments': 3,
    },
    {
      'author': 'Tran Thi B',
      'content': '·ª®ng d·ª•ng r·∫•t ti·ªán l·ª£i v√† d·ªÖ s·ª≠ d·ª•ng üëç',
      'time': '5 gi·ªù tr∆∞·ªõc',
      'likes': 8,
      'comments': 2,
    },
    {
      'author': 'Le Van C',
      'content': 'T√≠nh nƒÉng nh·∫Øn tin r·∫•t nhanh v√† ·ªïn ƒë·ªãnh',
      'time': '1 ng√†y tr∆∞·ªõc',
      'likes': 12,
      'comments': 7,
    },
  ];

  static const List<Map<String, dynamic>> sampleContacts = [
    {
      'name': 'Anh Minh',
      'phone': '0912345678',
      'avatar': 'A',
      'status': 'online',
      'lastMessage': 'Ch√†o b·∫°n!',
      'time': '10:30',
    },
    {
      'name': 'Binh Nguyen',
      'phone': '0987654321',
      'avatar': 'B',
      'status': 'offline',
      'lastMessage': 'H·∫πn g·∫∑p l·∫°i',
      'time': 'H√¥m qua',
    },
    {
      'name': 'Cuong Le',
      'phone': '0123456789',
      'avatar': 'C',
      'status': 'online',
      'lastMessage': 'OK, c·∫£m ∆°n!',
      'time': '14:20',
    },
    {
      'name': 'Dung Tran',
      'phone': '0901234567',
      'avatar': 'D',
      'status': 'online',
      'lastMessage': 'T√¥i s·∫Ω ƒë·∫øn s·ªõm',
      'time': '09:15',
    },
    {
      'name': 'Em Linh',
      'phone': '0912345679',
      'avatar': 'E',
      'status': 'offline',
      'lastMessage': 'C·∫£m ∆°n b·∫°n',
      'time': 'H√¥m qua',
    },
    {
      'name': 'Giang Hoang',
      'phone': '0987654322',
      'avatar': 'G',
      'status': 'online',
      'lastMessage': 'H·∫πn g·∫∑p l√∫c 8h',
      'time': '16:45',
    },
    {
      'name': 'Hoa Pham',
      'phone': '0123456790',
      'avatar': 'H',
      'status': 'offline',
      'lastMessage': 'T·∫°m bi·ªát',
      'time': '2 ng√†y tr∆∞·ªõc',
    },
    {
      'name': 'Khanh Vo',
      'phone': '0901234568',
      'avatar': 'K',
      'status': 'online',
      'lastMessage': 'ƒê∆∞·ª£c r·ªìi',
      'time': '11:20',
    },
    {
      'name': 'Linh Nguyen',
      'phone': '0912345680',
      'avatar': 'L',
      'status': 'offline',
      'lastMessage': 'H·∫πn g·∫∑p l·∫°i',
      'time': '3 ng√†y tr∆∞·ªõc',
    },
    {
      'name': 'Minh Tran',
      'phone': '0987654323',
      'avatar': 'M',
      'status': 'online',
      'lastMessage': 'Ch√∫c ng·ªß ngon',
      'time': '22:30',
    },
    {
      'name': 'Nam Le',
      'phone': '0123456791',
      'avatar': 'N',
      'status': 'offline',
      'lastMessage': 'OK',
      'time': '1 tu·∫ßn tr∆∞·ªõc',
    },
    {
      'name': 'Oanh Phan',
      'phone': '0901234569',
      'avatar': 'O',
      'status': 'online',
      'lastMessage': 'H√¥m nay th·∫ø n√†o?',
      'time': '13:15',
    },
    {
      'name': 'Phuong Vu',
      'phone': '0912345681',
      'avatar': 'P',
      'status': 'offline',
      'lastMessage': 'C·∫£m ∆°n',
      'time': '4 ng√†y tr∆∞·ªõc',
    },
    {
      'name': 'Quang Do',
      'phone': '0987654324',
      'avatar': 'Q',
      'status': 'online',
      'lastMessage': 'T√¥i s·∫Ω g·ªçi l·∫°i',
      'time': '15:40',
    },
    {
      'name': 'Son Ho',
      'phone': '0123456792',
      'avatar': 'S',
      'status': 'offline',
      'lastMessage': 'H·∫πn g·∫∑p',
      'time': '1 th√°ng tr∆∞·ªõc',
    },
    {
      'name': 'Thao Bui',
      'phone': '0901234570',
      'avatar': 'T',
      'status': 'online',
      'lastMessage': 'Ch√†o b·∫°n',
      'time': '08:00',
    },
    {
      'name': 'Uyen Ngo',
      'phone': '0912345682',
      'avatar': 'U',
      'status': 'offline',
      'lastMessage': 'T·∫°m bi·ªát',
      'time': '2 tu·∫ßn tr∆∞·ªõc',
    },
    {
      'name': 'Vy Dang',
      'phone': '0987654325',
      'avatar': 'V',
      'status': 'online',
      'lastMessage': 'H·∫πn g·∫∑p l·∫°i',
      'time': '17:25',
    },
  ];

  // Sample Conversations Data
  static List<Map<String, dynamic>> get sampleConversations => [
    {
      'id': '1',
      'name': 'Nguyen Van A',
      'avatar': null,
      'lastMessage': 'Ch√†o b·∫°n! H√¥m nay th·∫ø n√†o?',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(minutes: 5))
          .toIso8601String(),
      'unreadCount': 2,
      'isOnline': true,
      'isGroup': false,
    },
    {
      'id': '2',
      'name': 'Tran Thi B',
      'avatar': null,
      'lastMessage': 'C·∫£m ∆°n b·∫°n ƒë√£ gi√∫p ƒë·ª°! üëç',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(hours: 1))
          .toIso8601String(),
      'unreadCount': 0,
      'isOnline': false,
      'isGroup': false,
    },
    {
      'id': '3',
      'name': 'Le Van C',
      'avatar': null,
      'lastMessage': 'H·∫πn g·∫∑p l·∫°i v√†o tu·∫ßn sau nh√©',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(hours: 3))
          .toIso8601String(),
      'unreadCount': 1,
      'isOnline': true,
      'isGroup': false,
    },
    {
      'id': '4',
      'name': 'Pham Thi D',
      'avatar': null,
      'lastMessage': 'B·∫°n c√≥ th·ªÉ g·ª≠i file cho m√¨nh ƒë∆∞·ª£c kh√¥ng?',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(hours: 6))
          .toIso8601String(),
      'unreadCount': 0,
      'isOnline': false,
      'isGroup': false,
    },
    {
      'id': '5',
      'name': 'Hoang Van E',
      'avatar': null,
      'lastMessage': 'OK, m√¨nh s·∫Ω check l·∫°i v√† b√°o b·∫°n',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(days: 1))
          .toIso8601String(),
      'unreadCount': 3,
      'isOnline': false,
      'isGroup': false,
    },
    {
      'id': '6',
      'name': 'Nh√≥m C√¥ng Vi·ªác',
      'avatar': null,
      'lastMessage': 'Cu·ªôc h·ªçp s√°ng mai l√∫c 9h nh√© m·ªçi ng∆∞·ªùi',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(days: 1))
          .toIso8601String(),
      'unreadCount': 5,
      'isOnline': false,
      'isGroup': true,
    },
    {
      'id': '7',
      'name': 'Nguyen Thi F',
      'avatar': null,
      'lastMessage': 'C·∫£m ∆°n b·∫°n nhi·ªÅu! üòä',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(days: 2))
          .toIso8601String(),
      'unreadCount': 0,
      'isOnline': false,
      'isGroup': false,
    },
    {
      'id': '8',
      'name': 'Nh√≥m B·∫°n B√®',
      'avatar': null,
      'lastMessage': 'T·ªëi nay ƒëi ƒÉn kh√¥ng m·ªçi ng∆∞·ªùi?',
      'lastMessageTime': DateTime.now()
          .subtract(const Duration(days: 3))
          .toIso8601String(),
      'unreadCount': 0,
      'isOnline': false,
      'isGroup': true,
    },
  ];

  // Sample Messages Data for different conversations
  static Map<String, List<Map<String, dynamic>>> get sampleMessages => {
    '1': [
      // Nguyen Van A conversation
      {
        'id': 'msg_1_1',
        'conversationId': '1',
        'senderId': 'current_user',
        'senderName': 'B·∫°n',
        'senderAvatar': null,
        'content': 'Ch√†o b·∫°n! H√¥m nay th·∫ø n√†o?',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(minutes: 10))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
      {
        'id': 'msg_1_2',
        'conversationId': '1',
        'senderId': 'user_1',
        'senderName': 'Nguyen Van A',
        'senderAvatar': null,
        'content': 'Ch√†o b·∫°n! M√¨nh kh·ªèe, c·∫£m ∆°n b·∫°n ƒë√£ h·ªèi thƒÉm üòä',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(minutes: 8))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
      {
        'id': 'msg_1_3',
        'conversationId': '1',
        'senderId': 'current_user',
        'senderName': 'B·∫°n',
        'senderAvatar': null,
        'content': 'Tuy·ªát v·ªùi! B·∫°n c√≥ k·∫ø ho·∫°ch g√¨ cho cu·ªëi tu·∫ßn kh√¥ng?',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(minutes: 5))
            .toIso8601String(),
        'status': 'delivered',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
    ],
    '2': [
      // Tran Thi B conversation
      {
        'id': 'msg_2_1',
        'conversationId': '2',
        'senderId': 'user_2',
        'senderName': 'Tran Thi B',
        'senderAvatar': null,
        'content': 'C·∫£m ∆°n b·∫°n ƒë√£ gi√∫p ƒë·ª°! üëç',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(hours: 1))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
    ],
    '3': [
      // Le Van C conversation
      {
        'id': 'msg_3_1',
        'conversationId': '3',
        'senderId': 'user_3',
        'senderName': 'Le Van C',
        'senderAvatar': null,
        'content': 'H·∫πn g·∫∑p l·∫°i v√†o tu·∫ßn sau nh√©',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(hours: 3))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
      {
        'id': 'msg_3_2',
        'conversationId': '3',
        'senderId': 'current_user',
        'senderName': 'B·∫°n',
        'senderAvatar': null,
        'content': 'OK, h·∫πn g·∫∑p l·∫°i!',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(hours: 2, minutes: 30))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
    ],
    '6': [
      // Nh√≥m C√¥ng Vi·ªác conversation
      {
        'id': 'msg_6_1',
        'conversationId': '6',
        'senderId': 'user_4',
        'senderName': 'Pham Thi D',
        'senderAvatar': null,
        'content': 'Cu·ªôc h·ªçp s√°ng mai l√∫c 9h nh√© m·ªçi ng∆∞·ªùi',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(days: 1))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
      {
        'id': 'msg_6_2',
        'conversationId': '6',
        'senderId': 'current_user',
        'senderName': 'B·∫°n',
        'senderAvatar': null,
        'content': 'OK, m√¨nh s·∫Ω tham gia',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(days: 1, minutes: -30))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
      {
        'id': 'msg_6_3',
        'conversationId': '6',
        'senderId': 'user_5',
        'senderName': 'Hoang Van E',
        'senderAvatar': null,
        'content': 'M√¨nh c≈©ng tham gia',
        'type': 'text',
        'timestamp': DateTime.now()
            .subtract(const Duration(days: 1, minutes: -20))
            .toIso8601String(),
        'status': 'read',
        'replyToMessageId': null,
        'isEdited': false,
        'editedAt': null,
      },
    ],
  };
}
